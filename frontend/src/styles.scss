
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

/* For use in src/lib/core/theming/_palette.scss */
$md-progressblack: (
    50 : #e0e0e0,
    100 : #b3b3b3,
    200 : #808080,
    300 : #4d4d4d,
    400 : #262626,
    500 : #000000,
    600 : #000000,
    700 : #000000,
    800 : #000000,
    900 : #000000,
    A100 : #a6a6a6,
    A200 : #8c8c8c,
    A400 : #737373,
    A700 : #666666,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$progress-primary: mat.define-palette($md-progressblack);
$progress-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$progress-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$progress-theme: mat.define-light-theme((
  color: (
    primary: $progress-primary,
    accent: $progress-accent,
    warn: $progress-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($progress-theme);

/* You can add global styles to this file, and also import other style files */

@import url('https://fonts.googleapis.com/css2?family=Actor&family=Anton&display=swap');


// html, body { height: 100%; }
body { margin: 0; font-family: "Anton", "Helvetica Neue", sans-serif; }


:root {
  --clr-neutral-100: #fff;
  --clr-neutral-900: #000;

  --ff-primary: "Actor",sans-serif,"google";
  --ff-accent: "Anton",sans-serif,"google";
  
  /* -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; */
  --ff-code: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  background-color: var(--clr-neutral-100);
  font-family: var(--ff-primary);
  font-weight: 400;
  overflow: hidden;
}

h1,
h2,
h3,
a {
  font-family: var(--ff-accent);
}

body,
h1,
h2,
h3,
p {
  margin: 0;
  color: black;
}

h1,
h2,
h3 {
  margin-bottom: 1em;
}

.container {
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr auto;
  grid-template-areas: 
    'header'
    'main'
    'footer';
}

.container > header {
  grid-area: header;
}

.container > main {
  grid-area: main;
  /* padding: 0; 15px 5px 10px 5px; */
  overflow: auto;
}

.container > footer {
  grid-area: footer;
}

footer {
  display: flex;
  justify-content: center;
  width: 100%;
}

input {
  width: 100%;
  font-size: 1rem;
  padding: .5em .7em;
  margin-bottom: 1em;
}

.flex,
.flex-container {
  display: flex;
  flex-direction: column;
  padding: 2em;
  width: 100%;
}

.flex-container {
  align-items: center;
}

.card {
  display: flex;
  flex-direction: column;
  border: 2px solid var(--clr-neutral-900);
  width: min(400px, 100%);
  margin: .5em;
  padding: 1em;
}

.card p {
  cursor: pointer;
}

.progress-button {
  width: min(200px, 100%);
  background-color: var(--clr-neutral-900);
  color: var(--clr-neutral-100);
  font-family: var(--ff-accent);
  padding: .75em 1.5em;
  font-size: 1.25em;
  font-weight: 900;
  border: 0;
  border-radius: 3px;
  margin-bottom: 1em;
}

a {
  margin-left: .5rem;
  color: var(--clr-neutral-900)
}

.errorBox {
  color: red;
  padding: .2rem;
  background-color: bisque;
  border-radius: 3px;
  // margin-bottom: 2em;
  width: 100%;
}

.errorBox p {
  padding: 1rem;
  box-shadow: 0px 0px 0px 1px red inset;
  border-radius: 3px;
}

@media screen and (min-width: 800px) {
  .flex {
    flex-direction: row;
  }
}